Microsoft (R) Macro Assembler Version 14.29.30038.1	    07/18/21 15:28:03
<Project 3 - Data Validation, Looping, and Constants     (Pr  Page 1 - 1


				TITLE Project 3 - Data Validation, Looping, and Constants     (Proj3_rossgab.asm)

				; Author: Gabriel Ross
				; Last Modified: 
				; OSU email address: rossgab@oregonstate.edu
				; Course number/section:   CS271 Section 400
				; Project Number: 3                Due Date: 18-Jul-21
				; Description: Program asks user for their name, then repeatedly asks the user
				; for a number in [-200, -100] or [-50, -1] inclusive. When a non-negative number
				; is entered the program reports the number of inputs and the min, max, sum, and 
				; rounded average of the inputs.

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

				; Constants
 =-000000C8			LOWER_BOUND_1 = -200
 =-00000064			UPPER_BOUND_1 = -100
 =-00000032			LOWER_BOUND_2 = -50
 =-00000001			UPPER_BOUND_2 = -1

 00000000			.data

				; Prompt/info strings
 00000000 50 72 6F 6A 65	intro	BYTE	"Project 3: Data Validation, Looping, and Constants by Gabriel Ross",0
	   63 74 20 33 3A
	   20 44 61 74 61
	   20 56 61 6C 69
	   64 61 74 69 6F
	   6E 2C 20 4C 6F
	   6F 70 69 6E 67
	   2C 20 61 6E 64
	   20 43 6F 6E 73
	   74 61 6E 74 73
	   20 62 79 20 47
	   61 62 72 69 65
	   6C 20 52 6F 73
	   73 00
 00000043 45 43 31 3A 20	ec1		BYTE	"EC1: Program numbers the lines during user input, only incrementing on valid inputs",0
	   50 72 6F 67 72
	   61 6D 20 6E 75
	   6D 62 65 72 73
	   20 74 68 65 20
	   6C 69 6E 65 73
	   20 64 75 72 69
	   6E 67 20 75 73
	   65 72 20 69 6E
	   70 75 74 2C 20
	   6F 6E 6C 79 20
	   69 6E 63 72 65
	   6D 65 6E 74 69
	   6E 67 20 6F 6E
	   20 76 61 6C 69
	   64 20 69 6E 70
	   75 74 73 00
 00000097 57 68 61 74 20	getName	BYTE	"What is your name? ",0
	   69 73 20 79 6F
	   75 72 20 6E 61
	   6D 65 3F 20 00
 000000AB 48 65 6C 6C 6F	greet	BYTE	"Hello there, ",0
	   20 74 68 65 72
	   65 2C 20 00
 000000B9 50 6C 65 61 73	ranges	BYTE	"Please enter numbers in [-200, -100] or [-50, -1].",0
	   65 20 65 6E 74
	   65 72 20 6E 75
	   6D 62 65 72 73
	   20 69 6E 20 5B
	   2D 32 30 30 2C
	   20 2D 31 30 30
	   5D 20 6F 72 20
	   5B 2D 35 30 2C
	   20 2D 31 5D 2E
	   00
 000000EC 45 6E 74 65 72	isDone	BYTE	"Enter a non-negative number when you are finished to see results.",0
	   20 61 20 6E 6F
	   6E 2D 6E 65 67
	   61 74 69 76 65
	   20 6E 75 6D 62
	   65 72 20 77 68
	   65 6E 20 79 6F
	   75 20 61 72 65
	   20 66 69 6E 69
	   73 68 65 64 20
	   74 6F 20 73 65
	   65 20 72 65 73
	   75 6C 74 73 2E
	   00
 0000012E 3A 20 45 6E 74	inpNum	BYTE	": Enter number: ",0
	   65 72 20 6E 75
	   6D 62 65 72 3A
	   20 00
 0000013F 4E 75 6D 62 65	invalid	BYTE	"Number invalid!",0
	   72 20 69 6E 76
	   61 6C 69 64 21
	   00
 0000014F 4E 6F 20 76 61	noNums	BYTE	"No valid numbers entered",0
	   6C 69 64 20 6E
	   75 6D 62 65 72
	   73 20 65 6E 74
	   65 72 65 64 00
 00000168 47 6F 6F 64 62	bye		BYTE	"Goodbye and thanks for playing, ",0
	   79 65 20 61 6E
	   64 20 74 68 61
	   6E 6B 73 20 66
	   6F 72 20 70 6C
	   61 79 69 6E 67
	   2C 20 00

				; User inputs
 00000189  00000050 [		uName	BYTE	80 DUP(0)
	    00
	   ]
 000001D9 00000000		uNameSz	DWORD	?
 000001DD 00000000		userInp	SDWORD	?
 000001E1 FFFFFF37		max		SDWORD	LOWER_BOUND_1 - 1
 000001E5 00000000		min		SDWORD	UPPER_BOUND_2 + 1
 000001E9 00000000		count	SDWORD	0
 000001ED 00000000		sum		SDWORD	0
 000001F1 00000000		avg		SDWORD	0
 000001F5 00000000		avgRem	SDWORD	?

				; Result strings
 000001F9 59 6F 75 20 65	numOut1	BYTE	"You entered ",0
	   6E 74 65 72 65
	   64 20 00
 00000206 20 76 61 6C 69	numOut2	BYTE	" valid numbers.",0
	   64 20 6E 75 6D
	   62 65 72 73 2E
	   00
 00000216 54 68 65 20 6D	maxOut	BYTE	"The maximum valid number is ",0
	   61 78 69 6D 75
	   6D 20 76 61 6C
	   69 64 20 6E 75
	   6D 62 65 72 20
	   69 73 20 00
 00000233 54 68 65 20 6D	minOut	BYTE	"The minimum valid nuymber is ",0
	   69 6E 69 6D 75
	   6D 20 76 61 6C
	   69 64 20 6E 75
	   79 6D 62 65 72
	   20 69 73 20 00
 00000251 54 68 65 20 73	sumOut	BYTE	"The sum of your valid numbers is ",0
	   75 6D 20 6F 66
	   20 79 6F 75 72
	   20 76 61 6C 69
	   64 20 6E 75 6D
	   62 65 72 73 20
	   69 73 20 00
 00000273 54 68 65 20 72	avgOut	BYTE	"The rounded average is ",0
	   6F 75 6E 64 65
	   64 20 61 76 65
	   72 61 67 65 20
	   69 73 20 00


 00000000			.code
 00000000			main PROC

				; Introduce program
 00000000  BA 00000000 R	MOV		EDX, OFFSET intro
 00000005  E8 00000000 E	CALL	WriteString
 0000000A  E8 00000000 E	CALL	CrLf
 0000000F  BA 00000043 R	MOV		EDX, OFFSET ec1
 00000014  E8 00000000 E	CALL	WriteString
 00000019  E8 00000000 E	CALL	CrLf
				; Take user's name
 0000001E  BA 00000097 R	MOV		EDX, OFFSET getName
 00000023  E8 00000000 E	CALL	WriteString
 00000028  BA 00000189 R	MOV		EDX, OFFSET uName
 0000002D  B9 00000050		MOV		ECX, SIZEOF	uName
 00000032  E8 00000000 E	CALL	ReadString
 00000037  A3 000001D9 R	MOV		uNameSz, EAX
 0000003C  E8 00000000 E	CALL	CrLf
				; Greet user
 00000041  BA 000000AB R	MOV		EDX, OFFSET greet
 00000046  E8 00000000 E	CALL	WriteString
 0000004B  BA 00000189 R	MOV		EDX, OFFSET uName
 00000050  E8 00000000 E	CALL	WriteString
 00000055  E8 00000000 E	CALL	CrLf
 0000005A  E8 00000000 E	CALL	CrLf
				; Explain rules
 0000005F  BA 000000B9 R	MOV		EDX, OFFSET ranges
 00000064  E8 00000000 E	CALL	WriteString
 00000069  E8 00000000 E	CALL	CrLf
 0000006E  BA 000000EC R	MOV		EDX, OFFSET isDone
 00000073  E8 00000000 E	CALL	WriteString
 00000078  E8 00000000 E	CALL	CrLf
 0000007D  E8 00000000 E	CALL	CrLf


				; Take user inputs
 00000082			_takeInputs:
 00000082  A1 000001E9 R		MOV		EAX, count
 00000087  83 C0 01			ADD		EAX, 1
 0000008A  E8 00000000 E		CALL	WriteDec
 0000008F  BA 0000012E R		MOV		EDX, OFFSET inpNum
 00000094  E8 00000000 E		CALL	WriteString
 00000099  E8 00000000 E		CALL	ReadInt
 0000009E  A3 000001DD R		MOV		userInp, EAX
 000000A3  EB 00			JMP		_checkExit	; Checks if input is above zero


				; Check if user input is non-negative and jump to validate the input/goodbye as necessary
 000000A5			_checkExit:
 000000A5  83 3D 000001DD R		CMP		userInp, 0
	   00
 000000AC  7D 74			JGE		_calcAvg
 000000AE  EB 00			JMP		_checkValid	; Validate input if below zero


				; Validate user input if below zero
 000000B0			_checkValid:
					; Check if number is between -200 & -1
 000000B0  81 3D 000001DD R		CMP		userInp, LOWER_BOUND_1
	   FFFFFF38
 000000BA  7C 52			JL		_invalidInp
 000000BC  83 3D 000001DD R		CMP		userInp, UPPER_BOUND_2
	   FF
 000000C3  7F 49			JG		_invalidInp
					; if num is between -200 & -1, if it is leq -100 or geq -50 then it is valid, otherwise invalid
 000000C5  83 3D 000001DD R		CMP		userInp, UPPER_BOUND_1
	   9C
 000000CC  7E 0B			JLE		_validInp
 000000CE  83 3D 000001DD R		CMP		userInp, LOWER_BOUND_2
	   CE
 000000D5  7D 02			JGE		_validInp
					; number is in (-100, -50) and is thus invalid
 000000D7  EB 35			JMP		_invalidInp


				; Input is valid. Recalc max, min, sum. Increment count
 000000D9			_validInp:
					; increment count and add input to sum
 000000D9  FF 05 000001E9 R		INC		count
 000000DF  A1 000001DD R		MOV		EAX, userInp
 000000E4  01 05 000001ED R		ADD		sum, EAX
					; compare input against current max and min and updates as necessary

 000000EA  A1 000001DD R		MOV		EAX, userInp
 000000EF  3B 05 000001E1 R		CMP		EAX, max
 000000F5  7E 05			JLE		_notMax
 000000F7  A3 000001E1 R		MOV		max, EAX
 000000FC			_notMax:
 000000FC  3B 05 000001E5 R		CMP		EAX, min
 00000102  7D 05			JGE		_notMin
 00000104  A3 000001E5 R		MOV		min, EAX
					; loop back to take another input
 00000109			_notMin:
 00000109  E9 FFFFFF74			JMP		_takeInputs


				; Input is invalid
 0000010E			_invalidInp:
 0000010E  BA 0000013F R		MOV		EDX, OFFSET invalid
 00000113  E8 00000000 E		CALL	WriteString
 00000118  E8 00000000 E		CALL	CrLf
 0000011D  E9 FFFFFF60			JMP		_takeInputs
					

				; Calculate average
 00000122			_calcAvg:
					; jump to goodbye if no nums entered
 00000122  83 3D 000001E9 R		CMP		count, 0
	   00
 00000129  0F 84 000000C7		jz		_goodbye
					; otherwise calculate average and go to display results
 0000012F  B8 00000000			MOV		EAX, 0
 00000134  BA 00000000			MOV		EDX, 0
 00000139  A1 000001ED R		MOV		EAX, sum
 0000013E  99				CDQ
 0000013F  F7 3D 000001E9 R		IDIV	count
 00000145  A3 000001F1 R		MOV		avg, EAX
					; properly round
 0000014A  89 15 000001F5 R		MOV		avgRem, EDX
 00000150  BB FFFFFFFE			MOV		EBX, -2
 00000155  A1 000001E9 R		MOV		EAX, count
 0000015A  99				CDQ
 0000015B  F7 FB			IDIV	EBX
 0000015D  8B 1D 000001F5 R		MOV		EBX, avgRem
 00000163  3B D8			CMP		EBX, EAX
 00000165  7C 02			JL		_roundUp
 00000167  EB 06			JMP		_displayResults
 00000169			_roundUp:
 00000169  FF 0D 000001F1 R		DEC		avg
					

				; Display results
 0000016F			_displayResults:
					; Number of inputs recorded
 0000016F  BA 000001F9 R		MOV		EDX, OFFSET numOut1
 00000174  E8 00000000 E		CALL	WriteString
 00000179  A1 000001E9 R		MOV		EAX, count
 0000017E  E8 00000000 E		CALL	WriteDec
 00000183  BA 00000206 R		MOV		EDX, OFFSET numOut2
 00000188  E8 00000000 E		CALL	WriteString
 0000018D  E8 00000000 E		CALL	CrLf
						; Max of inputs
 00000192  BA 00000216 R		MOV		EDX, OFFSET maxOut
 00000197  E8 00000000 E		CALL	WriteString
 0000019C  A1 000001E1 R		MOV		EAX, max
 000001A1  E8 00000000 E		CALL	WriteInt
 000001A6  E8 00000000 E		CALL	CrLf
						; Min of inputs
 000001AB  BA 00000233 R		MOV		EDX, OFFSET minOut
 000001B0  E8 00000000 E		CALL	WriteString
 000001B5  A1 000001E5 R		MOV		EAX, min
 000001BA  E8 00000000 E		CALL	WriteInt
 000001BF  E8 00000000 E		CALL	CrLf
						; Sum of inputs
 000001C4  BA 00000251 R		MOV		EDX, OFFSET sumOut
 000001C9  E8 00000000 E		CALL	WriteString
 000001CE  A1 000001ED R		MOV		EAX, sum
 000001D3  E8 00000000 E		CALL	WriteInt
 000001D8  E8 00000000 E		CALL	CrLf
						; Avg of inputs
 000001DD  BA 00000273 R		MOV		EDX, OFFSET avgOut
 000001E2  E8 00000000 E		CALL	WriteString
 000001E7  A1 000001F1 R		MOV		EAX, avg
 000001EC  E8 00000000 E		CALL	WriteInt
 000001F1  E8 00000000 E		CALL	CrLf


				; Goodbye
 000001F6			_goodbye:
 000001F6  E8 00000000 E		CALL	CrLf
 000001FB  BA 00000168 R		MOV		EDX, OFFSET bye
 00000200  E8 00000000 E		CALL	WriteString

					Invoke ExitProcess,0	; exit to operating system
 00000205  6A 00	   *	    push   +000000000h
 00000207  E8 00000000 E   *	    call   ExitProcess
 0000020C			main ENDP

				; (insert additional procedures here)

				END main
Microsoft (R) Macro Assembler Version 14.29.30038.1	    07/18/21 15:28:03
<Project 3 - Data Validation, Looping, and Constants     (Pr  Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000028B Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000020C Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000020C Public STDCALL
  _takeInputs  . . . . . . . . .	L Near	 00000082 _TEXT	
  _checkExit . . . . . . . . . .	L Near	 000000A5 _TEXT	
  _checkValid  . . . . . . . . .	L Near	 000000B0 _TEXT	
  _validInp  . . . . . . . . . .	L Near	 000000D9 _TEXT	
  _notMax  . . . . . . . . . . .	L Near	 000000FC _TEXT	
  _notMin  . . . . . . . . . . .	L Near	 00000109 _TEXT	
  _invalidInp  . . . . . . . . .	L Near	 0000010E _TEXT	
  _calcAvg . . . . . . . . . . .	L Near	 00000122 _TEXT	
  _roundUp . . . . . . . . . . .	L Near	 00000169 _TEXT	
  _displayResults  . . . . . . .	L Near	 0000016F _TEXT	
  _goodbye . . . . . . . . . . .	L Near	 000001F6 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
LOWER_BOUND_1  . . . . . . . . .	Number	 -000000C8h   
LOWER_BOUND_2  . . . . . . . . .	Number	 -00000032h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
UPPER_BOUND_1  . . . . . . . . .	Number	 -00000064h   
UPPER_BOUND_2  . . . . . . . . .	Number	 -00000001h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
avgOut . . . . . . . . . . . . .	Byte	 00000273 _DATA	
avgRem . . . . . . . . . . . . .	DWord	 000001F5 _DATA	
avg  . . . . . . . . . . . . . .	DWord	 000001F1 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
bye  . . . . . . . . . . . . . .	Byte	 00000168 _DATA	
count  . . . . . . . . . . . . .	DWord	 000001E9 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
ec1  . . . . . . . . . . . . . .	Byte	 00000043 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
getName  . . . . . . . . . . . .	Byte	 00000097 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
greet  . . . . . . . . . . . . .	Byte	 000000AB _DATA	
inpNum . . . . . . . . . . . . .	Byte	 0000012E _DATA	
intro  . . . . . . . . . . . . .	Byte	 00000000 _DATA	
invalid  . . . . . . . . . . . .	Byte	 0000013F _DATA	
isDone . . . . . . . . . . . . .	Byte	 000000EC _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
maxOut . . . . . . . . . . . . .	Byte	 00000216 _DATA	
max  . . . . . . . . . . . . . .	DWord	 000001E1 _DATA	
minOut . . . . . . . . . . . . .	Byte	 00000233 _DATA	
min  . . . . . . . . . . . . . .	DWord	 000001E5 _DATA	
noNums . . . . . . . . . . . . .	Byte	 0000014F _DATA	
numOut1  . . . . . . . . . . . .	Byte	 000001F9 _DATA	
numOut2  . . . . . . . . . . . .	Byte	 00000206 _DATA	
ranges . . . . . . . . . . . . .	Byte	 000000B9 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
sumOut . . . . . . . . . . . . .	Byte	 00000251 _DATA	
sum  . . . . . . . . . . . . . .	DWord	 000001ED _DATA	
uNameSz  . . . . . . . . . . . .	DWord	 000001D9 _DATA	
uName  . . . . . . . . . . . . .	Byte	 00000189 _DATA	
userInp  . . . . . . . . . . . .	DWord	 000001DD _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
